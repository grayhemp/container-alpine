#!/usr/bin/env bash
#
# Build

set -e -o pipefail

: ${NAMESPACE:-"$(id -un)"}
: ${TAG:='master'}

image="$(echo ${REGISTRY} | sed 's/\/*$/\//;s/^\/$//')${NAMESPACE}/alpine"

build_() {
  local cache_from
  for t in $(echo -e "latest\nmaster\n${TAG}" | uniq); do
    cache_from="${cache_from} --cache-from ${image}:${t}"
    if [[ -z "$(docker image ls -q ${image}:${t})" ]]; then
      docker image pull "${image}:${t}" || true
    fi
  done
  docker image build ${cache_from} -t "${image}:${TAG}" .
}

build_push() {
  : ${REGISTRY_USER:="${NAMESPACE}"}

  trap "docker logout ${REGISTRY}" EXIT
  docker login --password-stdin -u "${REGISTRY_USER}" "${REGISTRY}"
  docker image push "${image}:${TAG}"
}

build_test() {
  docker image build --build-arg IMAGE="${image}" --build-arg TAG="${TAG}" test
}

main() {
  "build_$1" "${@:2}"
}

main "$@"
